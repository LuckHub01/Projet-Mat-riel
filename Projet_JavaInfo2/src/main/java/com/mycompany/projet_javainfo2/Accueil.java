/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projet_javainfo2;

import erp.PanelSlide;
import form.FormMateriels;
import java.awt.Component;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author user
 */
public class Accueil extends javax.swing.JFrame {
    
    private Connection con;
     
    //Connection con = null;
    ResultSet rs_cahier, rs_rallonge, rs_projecteur, rs_classe, rs_table= null;
    PreparedStatement ps_cahier, ps_rallonge, ps_classe, ps_projecteur, ps_table= null;

    /**
     * Creates new form Accueil
     * @param con
     */
    public Accueil() {
        initComponents();
       // con = db.mycon();
       
        setSize(Toolkit.getDefaultToolkit().getScreenSize());
      }
    
    public Accueil( Connection con, String un){
        this.con=con;
        if (con == null) {
            System.out.println("La connexion à la base de données n'est pas établie.");
        } else {
            System.out.println("Connexion établie.");
        }
        initComponents();
        namecon.setText("Bienvenue: " +un);
       
    
    }
    
//    public PanelSlide getCorpsSlide() {
//        //return corpsSlide;
//}
    
    public PanelSlide getAccSlide() {
        return accordeonSlide;
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGradiente1 = new erp.PanelGradiente();
        panelBorder1 = new erp.PanelBorder();
        accordeonSlide = new erp.PanelSlide();
        accordeon = new erp.PanelBorder();
        jLabel13 = new javax.swing.JLabel();
        accueilAccordeon = new javax.swing.JButton();
        empruntAccordeon = new javax.swing.JButton();
        retourAccordeon = new javax.swing.JButton();
        enregistrerAccordeon = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        panelGradiente2 = new erp.PanelGradiente();
        panelBorder2 = new erp.PanelBorder();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        namecon = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableModel = new javax.swing.JTable();
        jb_update = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        panelBorder4 = new erp.PanelBorder();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        listeRallonge = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        listeClasse = new javax.swing.JComboBox<>();
        listeCahier = new javax.swing.JComboBox<>();
        empruntBtn = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        nomPrenoms = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        listeProjecteur = new javax.swing.JComboBox<>();
        dateLabel = new javax.swing.JLabel();
        dateBtn = new javax.swing.JButton();
        annulerEmprunt = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        panelBorder5 = new erp.PanelBorder();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox<>();
        txtCahier2 = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        panelBorder6 = new erp.PanelBorder();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        modifierListeRallonge = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        modifierListeClasse = new javax.swing.JComboBox<>();
        modifierListeCahier = new javax.swing.JComboBox<>();
        modifierEmprunt = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        modifierNomPrenoms = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        modifierListeProjecteur = new javax.swing.JComboBox<>();
        modifierDateLabel = new javax.swing.JLabel();
        modifierDateBtn = new javax.swing.JButton();
        annulerModifierEmprunt1 = new javax.swing.JButton();
        modifierId = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelGradiente1.setColorPrimario(new java.awt.Color(16, 170, 212));
        panelGradiente1.setColorSecundario(new java.awt.Color(99, 242, 238));

        panelBorder1.setBackground(new java.awt.Color(198, 241, 255));
        panelBorder1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        accordeonSlide.setBackground(new java.awt.Color(9, 188, 202));

        accordeon.setBackground(new java.awt.Color(9, 152, 165));
        accordeon.setForeground(new java.awt.Color(255, 255, 255));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Segoe UI", 3, 20)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Accordeon");

        accueilAccordeon.setBackground(new java.awt.Color(12, 104, 112));
        accueilAccordeon.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        accueilAccordeon.setForeground(new java.awt.Color(255, 255, 255));
        accueilAccordeon.setText("Accueil");
        accueilAccordeon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        accueilAccordeon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accueilAccordeonActionPerformed(evt);
            }
        });

        empruntAccordeon.setBackground(new java.awt.Color(12, 104, 112));
        empruntAccordeon.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        empruntAccordeon.setForeground(new java.awt.Color(255, 255, 255));
        empruntAccordeon.setText("Emprunt");
        empruntAccordeon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        empruntAccordeon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empruntAccordeonActionPerformed(evt);
            }
        });

        retourAccordeon.setBackground(new java.awt.Color(12, 104, 112));
        retourAccordeon.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        retourAccordeon.setForeground(new java.awt.Color(255, 255, 255));
        retourAccordeon.setText("Retour");
        retourAccordeon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        retourAccordeon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourAccordeonActionPerformed(evt);
            }
        });

        enregistrerAccordeon.setBackground(new java.awt.Color(12, 104, 112));
        enregistrerAccordeon.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        enregistrerAccordeon.setForeground(new java.awt.Color(255, 255, 255));
        enregistrerAccordeon.setText("Enregistrement");
        enregistrerAccordeon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        enregistrerAccordeon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enregistrerAccordeonActionPerformed(evt);
            }
        });

        accordeon.setLayer(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        accordeon.setLayer(accueilAccordeon, javax.swing.JLayeredPane.DEFAULT_LAYER);
        accordeon.setLayer(empruntAccordeon, javax.swing.JLayeredPane.DEFAULT_LAYER);
        accordeon.setLayer(retourAccordeon, javax.swing.JLayeredPane.DEFAULT_LAYER);
        accordeon.setLayer(enregistrerAccordeon, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout accordeonLayout = new javax.swing.GroupLayout(accordeon);
        accordeon.setLayout(accordeonLayout);
        accordeonLayout.setHorizontalGroup(
            accordeonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accordeonLayout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addGroup(accordeonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enregistrerAccordeon, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(empruntAccordeon, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retourAccordeon, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accueilAccordeon, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        accordeonLayout.setVerticalGroup(
            accordeonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accordeonLayout.createSequentialGroup()
                .addGap(0, 42, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(47, 47, 47)
                .addComponent(accueilAccordeon)
                .addGap(31, 31, 31)
                .addComponent(enregistrerAccordeon)
                .addGap(37, 37, 37)
                .addComponent(empruntAccordeon)
                .addGap(42, 42, 42)
                .addComponent(retourAccordeon)
                .addGap(406, 406, 406))
        );

        javax.swing.GroupLayout accordeonSlideLayout = new javax.swing.GroupLayout(accordeonSlide);
        accordeonSlide.setLayout(accordeonSlideLayout);
        accordeonSlideLayout.setHorizontalGroup(
            accordeonSlideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accordeonSlideLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(accordeon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        accordeonSlideLayout.setVerticalGroup(
            accordeonSlideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accordeonSlideLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(accordeon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelBorder1.add(accordeonSlide, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 230, -1));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        panelGradiente2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Liste des matériels défectueux");
        panelBorder2.add(jLabel1);
        jLabel1.setBounds(0, 410, 460, 32);
        panelBorder2.add(jSeparator1);
        jSeparator1.setBounds(0, 400, 920, 10);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Liste des matériels en cours d'utilisation");
        panelBorder2.add(jLabel2);
        jLabel2.setBounds(400, 10, 460, 32);

        namecon.setFont(new java.awt.Font("Segoe UI", 3, 20)); // NOI18N
        namecon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        namecon.setText("Connecté sous: ");
        panelBorder2.add(namecon);
        namecon.setBounds(0, 10, 330, 27);

        jScrollPane1.setBackground(new java.awt.Color(192, 243, 255));
        jScrollPane1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jScrollPane1ComponentAdded(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        panelBorder2.add(jScrollPane1);
        jScrollPane1.setBounds(20, 90, 1050, 300);

        panelGradiente2.setLayer(panelBorder2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout panelGradiente2Layout = new javax.swing.GroupLayout(panelGradiente2);
        panelGradiente2.setLayout(panelGradiente2Layout);
        panelGradiente2Layout.setHorizontalGroup(
            panelGradiente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGradiente2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, 1177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelGradiente2Layout.setVerticalGroup(
            panelGradiente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGradiente2Layout.createSequentialGroup()
                .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, 742, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 51, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(panelGradiente2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(panelGradiente2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jTabbedPane1.addTab("tab1", jPanel1);

        tableModel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Type", "Numero", "Etat", "Classe", "date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableModel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableModelMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tableModel);

        jb_update.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jb_update.setForeground(new java.awt.Color(0, 0, 102));
        jb_update.setText("Enregistrer");
        jb_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jb_update)
                .addContainerGap())
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1130, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jb_update, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("tab2", jPanel2);

        panelBorder4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setBackground(new java.awt.Color(12, 135, 148));
        jLabel8.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 36)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Plateforme de Gestion du Matériel EPO");
        panelBorder4.add(jLabel8);
        jLabel8.setBounds(0, 0, 1200, 60);

        jLabel9.setFont(new java.awt.Font("Lucida Fax", 1, 27)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Effectuer un emprunt de matériel");
        panelBorder4.add(jLabel9);
        jLabel9.setBounds(290, 80, 660, 33);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setText("Lettre de la rallonge:");
        panelBorder4.add(jLabel10);
        jLabel10.setBounds(140, 290, 300, 32);

        listeRallonge.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        listeRallonge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listeRallongeActionPerformed(evt);
            }
        });
        panelBorder4.add(listeRallonge);
        listeRallonge.setBounds(560, 280, 370, 42);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Classe:");
        panelBorder4.add(jLabel11);
        jLabel11.setBounds(70, 590, 410, 32);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Numero du cahier de texte: ");
        panelBorder4.add(jLabel12);
        jLabel12.setBounds(110, 190, 360, 32);

        listeClasse.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        listeClasse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listeClasseActionPerformed(evt);
            }
        });
        panelBorder4.add(listeClasse);
        listeClasse.setBounds(560, 580, 370, 42);

        listeCahier.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        listeCahier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listeCahierActionPerformed(evt);
            }
        });
        panelBorder4.add(listeCahier);
        listeCahier.setBounds(560, 180, 370, 42);

        empruntBtn.setBackground(new java.awt.Color(12, 104, 112));
        empruntBtn.setFont(new java.awt.Font("Segoe UI", 3, 20)); // NOI18N
        empruntBtn.setForeground(new java.awt.Color(255, 255, 255));
        empruntBtn.setText("Emprunt");
        empruntBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empruntBtnActionPerformed(evt);
            }
        });
        panelBorder4.add(empruntBtn);
        empruntBtn.setBounds(270, 680, 260, 40);

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel19.setText("Lettre du projecteur:");
        panelBorder4.add(jLabel19);
        jLabel19.setBounds(140, 390, 300, 32);

        nomPrenoms.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        nomPrenoms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomPrenomsActionPerformed(evt);
            }
        });
        panelBorder4.add(nomPrenoms);
        nomPrenoms.setBounds(560, 470, 370, 40);

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel20.setText("Nom et prenoms de l'emprunteur:");
        panelBorder4.add(jLabel20);
        jLabel20.setBounds(70, 480, 410, 32);

        listeProjecteur.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        listeProjecteur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listeProjecteurActionPerformed(evt);
            }
        });
        panelBorder4.add(listeProjecteur);
        listeProjecteur.setBounds(560, 380, 370, 42);

        dateLabel.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        panelBorder4.add(dateLabel);
        dateLabel.setBounds(30, 730, 240, 40);

        dateBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        dateBtn.setText("Date");
        dateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateBtnActionPerformed(evt);
            }
        });
        panelBorder4.add(dateBtn);
        dateBtn.setBounds(30, 680, 113, 42);

        annulerEmprunt.setBackground(new java.awt.Color(160, 15, 15));
        annulerEmprunt.setFont(new java.awt.Font("Segoe UI", 3, 20)); // NOI18N
        annulerEmprunt.setForeground(new java.awt.Color(255, 255, 255));
        annulerEmprunt.setText("Annuler");
        annulerEmprunt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerEmpruntActionPerformed(evt);
            }
        });
        panelBorder4.add(annulerEmprunt);
        annulerEmprunt.setBounds(630, 680, 260, 40);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder4, javax.swing.GroupLayout.DEFAULT_SIZE, 1130, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder4, javax.swing.GroupLayout.DEFAULT_SIZE, 787, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab3", jPanel3);

        panelBorder5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel14.setBackground(new java.awt.Color(12, 135, 148));
        jLabel14.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 36)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Plateforme de Gestion du Matériel EPO");
        panelBorder5.add(jLabel14);
        jLabel14.setBounds(0, 0, 1200, 60);

        jLabel15.setFont(new java.awt.Font("Lucida Fax", 1, 27)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Effectuer un retour de matériel");
        panelBorder5.add(jLabel15);
        jLabel15.setBounds(290, 80, 660, 33);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel16.setText("Lettre de la rallonge:");
        panelBorder5.add(jLabel16);
        jLabel16.setBounds(140, 340, 300, 32);

        jComboBox5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        panelBorder5.add(jComboBox5);
        jComboBox5.setBounds(570, 330, 370, 42);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel17.setText("Lettre du projecteur:");
        panelBorder5.add(jLabel17);
        jLabel17.setBounds(140, 470, 300, 32);

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Numero du cahier de texte: ");
        panelBorder5.add(jLabel18);
        jLabel18.setBounds(110, 210, 360, 32);

        jComboBox6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });
        panelBorder5.add(jComboBox6);
        jComboBox6.setBounds(570, 460, 370, 42);

        txtCahier2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtCahier2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        txtCahier2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCahier2ActionPerformed(evt);
            }
        });
        panelBorder5.add(txtCahier2);
        txtCahier2.setBounds(570, 200, 370, 42);

        jButton4.setBackground(new java.awt.Color(12, 104, 112));
        jButton4.setFont(new java.awt.Font("Segoe UI", 3, 20)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Retour");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        panelBorder5.add(jButton4);
        jButton4.setBounds(450, 600, 370, 35);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder5, javax.swing.GroupLayout.DEFAULT_SIZE, 1130, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 793, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab4", jPanel4);

        panelBorder6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel21.setBackground(new java.awt.Color(12, 135, 148));
        jLabel21.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 36)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Plateforme de Gestion du Matériel EPO");
        panelBorder6.add(jLabel21);
        jLabel21.setBounds(0, 0, 1200, 60);

        jLabel22.setFont(new java.awt.Font("Lucida Fax", 1, 27)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Modifier un emprunt de matériel");
        panelBorder6.add(jLabel22);
        jLabel22.setBounds(290, 80, 570, 33);

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel23.setText("Lettre de la rallonge:");
        panelBorder6.add(jLabel23);
        jLabel23.setBounds(140, 290, 300, 32);

        modifierListeRallonge.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        modifierListeRallonge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierListeRallongeActionPerformed(evt);
            }
        });
        panelBorder6.add(modifierListeRallonge);
        modifierListeRallonge.setBounds(560, 280, 370, 42);

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Classe:");
        panelBorder6.add(jLabel24);
        jLabel24.setBounds(70, 590, 410, 32);

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Numero du cahier de texte: ");
        panelBorder6.add(jLabel25);
        jLabel25.setBounds(110, 190, 360, 32);

        modifierListeClasse.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        modifierListeClasse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierListeClasseActionPerformed(evt);
            }
        });
        panelBorder6.add(modifierListeClasse);
        modifierListeClasse.setBounds(560, 580, 370, 42);

        modifierListeCahier.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        modifierListeCahier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierListeCahierActionPerformed(evt);
            }
        });
        panelBorder6.add(modifierListeCahier);
        modifierListeCahier.setBounds(560, 180, 370, 42);

        modifierEmprunt.setBackground(new java.awt.Color(12, 104, 112));
        modifierEmprunt.setFont(new java.awt.Font("Segoe UI", 3, 20)); // NOI18N
        modifierEmprunt.setForeground(new java.awt.Color(255, 255, 255));
        modifierEmprunt.setText("Modifier");
        modifierEmprunt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierEmpruntActionPerformed(evt);
            }
        });
        panelBorder6.add(modifierEmprunt);
        modifierEmprunt.setBounds(270, 680, 260, 40);

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel26.setText("Lettre du projecteur:");
        panelBorder6.add(jLabel26);
        jLabel26.setBounds(140, 390, 300, 32);

        modifierNomPrenoms.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        modifierNomPrenoms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierNomPrenomsActionPerformed(evt);
            }
        });
        panelBorder6.add(modifierNomPrenoms);
        modifierNomPrenoms.setBounds(560, 470, 370, 40);

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel27.setText("Nom et prenoms de l'emprunteur:");
        panelBorder6.add(jLabel27);
        jLabel27.setBounds(70, 480, 410, 32);

        modifierListeProjecteur.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        modifierListeProjecteur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierListeProjecteurActionPerformed(evt);
            }
        });
        panelBorder6.add(modifierListeProjecteur);
        modifierListeProjecteur.setBounds(560, 380, 370, 42);

        modifierDateLabel.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        panelBorder6.add(modifierDateLabel);
        modifierDateLabel.setBounds(30, 730, 240, 40);

        modifierDateBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        modifierDateBtn.setText("Date");
        modifierDateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierDateBtnActionPerformed(evt);
            }
        });
        panelBorder6.add(modifierDateBtn);
        modifierDateBtn.setBounds(30, 680, 113, 42);

        annulerModifierEmprunt1.setBackground(new java.awt.Color(160, 15, 15));
        annulerModifierEmprunt1.setFont(new java.awt.Font("Segoe UI", 3, 20)); // NOI18N
        annulerModifierEmprunt1.setForeground(new java.awt.Color(255, 255, 255));
        annulerModifierEmprunt1.setText("Annuler");
        annulerModifierEmprunt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerModifierEmprunt1ActionPerformed(evt);
            }
        });
        panelBorder6.add(annulerModifierEmprunt1);
        annulerModifierEmprunt1.setBounds(630, 680, 260, 40);

        modifierId.setForeground(new java.awt.Color(242, 242, 242));
        panelBorder6.add(modifierId);
        modifierId.setBounds(850, 80, 55, 25);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder6, javax.swing.GroupLayout.DEFAULT_SIZE, 1130, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder6, javax.swing.GroupLayout.DEFAULT_SIZE, 787, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab5", jPanel5);

        panelBorder1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, -40, 1130, 840));

        panelGradiente1.setLayer(panelBorder1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout panelGradiente1Layout = new javax.swing.GroupLayout(panelGradiente1);
        panelGradiente1.setLayout(panelGradiente1Layout);
        panelGradiente1Layout.setHorizontalGroup(
            panelGradiente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGradiente1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        panelGradiente1Layout.setVerticalGroup(
            panelGradiente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGradiente1Layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelGradiente1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelGradiente1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
   

    

    

       
    
        
    private void listeRallongeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listeRallongeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listeRallongeActionPerformed

    private void listeClasseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listeClasseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listeClasseActionPerformed

    private void listeCahierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listeCahierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listeCahierActionPerformed

    private void empruntBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empruntBtnActionPerformed
      
try {
    // Démarrage d'une transaction
    con.setAutoCommit(false);

    String rallonge = (String) listeRallonge.getSelectedItem();
    String projecteur = (String) listeProjecteur.getSelectedItem();
    String cahier = (String) listeCahier.getSelectedItem();
    String classe = (String) listeClasse.getSelectedItem();
    String nom_prenoms = nomPrenoms.getText();
    String date= dateLabel.getText();

    // Insertion de l'emprunt
    String sqlInsert = "INSERT INTO emprunt (cahier, rallonge, projecteur, nom_prenoms, classe, date) VALUES (?, ?, ?, ?, ?, ?)";
    PreparedStatement pstmtInsert = con.prepareStatement(sqlInsert);
    pstmtInsert.setString(1, cahier);
    pstmtInsert.setString(2, rallonge);
    pstmtInsert.setString(3, projecteur);
    pstmtInsert.setString(4, nom_prenoms);
    pstmtInsert.setString(5, classe);
     pstmtInsert.setString(6, date);

    int resultInsert = pstmtInsert.executeUpdate();
    if (resultInsert > 0) {
        System.out.println("Emprunt effectué avec succès");

        // Mise à jour du statut d'emprunt pour chaque élément emprunté
        String sqlUpdate = "UPDATE rallonge SET statut_emprunt = 1 WHERE numero = ?";
        PreparedStatement pstmtUpdate = con.prepareStatement(sqlUpdate);
        pstmtUpdate.setString(1, rallonge);
        pstmtUpdate.executeUpdate();

        
        
        sqlUpdate = "UPDATE classe SET statut_emprunt = 1 WHERE nom = ?";
        pstmtUpdate = con.prepareStatement(sqlUpdate);
        pstmtUpdate.setString(1, classe);
        pstmtUpdate.executeUpdate();

        sqlUpdate = "UPDATE projecteur SET statut_emprunt = 1 WHERE numero = ?";
        pstmtUpdate = con.prepareStatement(sqlUpdate);
        pstmtUpdate.setString(1, projecteur);
        pstmtUpdate.executeUpdate();
        

        // Validation de la transaction
        con.commit();
    } else {
        System.out.println("Aucune donnée ajoutée");
        con.rollback(); // Annulation de la transaction
    }
        } catch (Exception e) {
            System.out.println("Emprunt non effectué: " + e.getMessage());
            try {
                if (con != null) con.rollback(); // Annuler la transaction en cas d'erreur
            } catch (SQLException ex) {
                System.out.println("Erreur lors de l'annulation: " + ex.getMessage());
            }
        } 

        
        
    }//GEN-LAST:event_empruntBtnActionPerformed

    private void accueilAccordeonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accueilAccordeonActionPerformed

        jTabbedPane1.setSelectedIndex(0);
        UpdateTable();
        // TODO add your handling code here:
    }//GEN-LAST:event_accueilAccordeonActionPerformed

    private void empruntAccordeonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empruntAccordeonActionPerformed
        // TODO add your handling code here:
         jTabbedPane1.setSelectedIndex(2);
         try{
            
             
        String sql_cahier= "SELECT numero FROM cahier WHERE statut_emprunt = 0";
        String sql_rallonge= "SELECT numero FROM rallonge WHERE statut_emprunt = 0";
        String sql_projecteur= "SELECT numero FROM projecteur WHERE statut_emprunt = 0";
        String sql_classe= "SELECT nom FROM classe WHERE statut_emprunt = 0";
        
         ps_cahier=con.prepareCall(sql_cahier );
         rs_cahier=ps_cahier.executeQuery();
            
            while (rs_cahier.next()) {
                     String cahier=rs_cahier.getString("numero");
                    listeCahier.addItem(cahier);
            }
            
         ps_rallonge=con.prepareCall(sql_rallonge );
         rs_rallonge=ps_rallonge.executeQuery();
            
            while (rs_rallonge.next()) {
                     String cahier=rs_rallonge.getString("numero");
                    listeRallonge.addItem(cahier);
            }
            
         ps_classe=con.prepareCall(sql_classe );
         rs_classe=ps_classe.executeQuery();
            
            while (rs_classe.next()) {
                     String cahier=rs_classe.getString("nom");
                    listeClasse.addItem(cahier);
            }
         ps_projecteur=con.prepareCall(sql_projecteur );
         rs_projecteur=ps_projecteur.executeQuery();
            
            while (rs_projecteur.next()) {
                     String cahier=rs_projecteur.getString("numero");
                    listeProjecteur.addItem(cahier);
            }
            
        }catch(Exception e){
            System.out.println("Erreur ajout : " + e.getMessage());
            e.printStackTrace();
        }
       
    }//GEN-LAST:event_empruntAccordeonActionPerformed

    private void enregistrerAccordeonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enregistrerAccordeonActionPerformed
        // TODO add your handling code here:
         jTabbedPane1.setSelectedIndex(1);
        
        
       
    }//GEN-LAST:event_enregistrerAccordeonActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox6ActionPerformed

    private void txtCahier2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCahier2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCahier2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void retourAccordeonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retourAccordeonActionPerformed
        // TODO add your handling code here:
          
         try{
             
             Retour retour=new Retour();
             
            retour.openRetourFenetre();
            this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
            this.dispose();
         }
         catch(Exception e){
             System.out.println("Erreur: "+e.getMessage());
         }
        
       
    }//GEN-LAST:event_retourAccordeonActionPerformed

    private void nomPrenomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomPrenomsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomPrenomsActionPerformed

    private void listeProjecteurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listeProjecteurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listeProjecteurActionPerformed

    private void dateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateBtnActionPerformed
        try {
    // Obtention de la date et de l'heure actuelles
    Date date = new Date();
    
    // Formatage de la date et de l'heure
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    String dateString = sdf.format(date);
    
    // Affichage dans le label
    dateLabel.setText(dateString);
    
    // Affichage d'un message pour vérifier si le code est atteint
    System.out.println("Date et heure mises à jour : " + dateString);
} catch (Exception e) {
    // Gestion des exceptions
    System.out.println("Erreur lors de la mise à jour de la date et de l'heure : " + e.getMessage());
}

        // TODO add your handling code here:
    }//GEN-LAST:event_dateBtnActionPerformed

    private void annulerEmpruntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerEmpruntActionPerformed
        listeCahier.setSelectedItem("");
        listeClasse.setSelectedItem("");
        listeRallonge.setSelectedItem("");
        listeProjecteur.setSelectedItem("");
        nomPrenoms.setText("");

        // TODO add your handling code here:
    }//GEN-LAST:event_annulerEmpruntActionPerformed

    private void modifierListeRallongeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierListeRallongeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modifierListeRallongeActionPerformed

    private void modifierListeClasseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierListeClasseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modifierListeClasseActionPerformed

    private void modifierListeCahierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierListeCahierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modifierListeCahierActionPerformed

    private void modifierEmpruntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierEmpruntActionPerformed
        updateEmprunt();
        //updateStatutEmprunt();

        // TODO add your handling code here:
    }//GEN-LAST:event_modifierEmpruntActionPerformed

    private void modifierNomPrenomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierNomPrenomsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modifierNomPrenomsActionPerformed

    private void modifierListeProjecteurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierListeProjecteurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modifierListeProjecteurActionPerformed

    private void modifierDateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierDateBtnActionPerformed
 try {
    // Obtention de la date et de l'heure actuelles
    Date date = new Date();
    
    // Formatage de la date et de l'heure
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    String dateString = sdf.format(date);
    
    // Affichage dans le label
    modifierDateLabel.setText(dateString);
    
    // Affichage d'un message pour vérifier si le code est atteint
    System.out.println("Date et heure mises à jour : " + dateString);
} catch (Exception e) {
    // Gestion des exceptions
    System.out.println("Erreur lors de la mise à jour de la date et de l'heure : " + e.getMessage());
}
        // TODO add your handling code here:
    }//GEN-LAST:event_modifierDateBtnActionPerformed

    private void annulerModifierEmprunt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerModifierEmprunt1ActionPerformed
         jTabbedPane1.setSelectedIndex(0);
         jTabbedPane1.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_annulerModifierEmprunt1ActionPerformed

    private void tableModelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableModelMouseReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_tableModelMouseReleased

    private void jb_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_updateActionPerformed
        // TODO add your handling code here:
        FormMateriels formMateriels = new FormMateriels();
        formMateriels.setVisible(true);
        this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jb_updateActionPerformed

    private void jScrollPane1ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jScrollPane1ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1ComponentAdded

//public void UpdateTable(){
//    String sql="SELECT * FROM emprunt";
//    try{
//        ps_table=con.prepareStatement(sql);
//        rs_table= ps_table.executeQuery();
//
////        // Créez un modèle de table pour stocker les données de la requête
////        DefaultTableModel tableModel = new DefaultTableModel();
////        // Ajoutez les colonnes de votre table (ID, cahier, rallonge, etc.)
////        tableModel.addColumn("ID");
////        tableModel.addColumn("Cahier");
////        tableModel.addColumn("Rallonge");
////        tableModel.addColumn("Projecteur");
////        tableModel.addColumn("Nom/Prenom");
////        tableModel.addColumn("Classe");
////        tableModel.addColumn("Date");
////        // Ajoutez une colonne supplémentaire pour le bouton "Modifier"
////        tableModel.addColumn("Modifier");
////
////        // Parcourez les résultats de la requête et ajoutez-les au modèle de table
////        while (rs_table.next()) {
////            Object[] row = {
////                rs_table.getInt("id"),
////                rs_table.getString("cahier"),
////                rs_table.getString("rallonge"),
////                rs_table.getString("projecteur"),
////                rs_table.getString("nom_prenoms"),
////                rs_table.getString("classe"),
////                rs_table.getString("date"),
////                "Modifier" // Ajoutez un bouton "Modifier" à chaque ligne
////            };
////            tableModel.addRow(row);
////        }
////
////        // Associez le modèle de table à votre JTable
////        table.setModel(tableModel);
////
////        // Utilisez une classe de rendu personnalisée pour la colonne "Modifier"
////        table.getColumn("Modifier").setCellRenderer(new ButtonRenderer());
////    } catch(Exception e){
////        e.printStackTrace();
////    }
//
//
//class ButtonRenderer extends JButton implements TableCellRenderer {
//    public ButtonRenderer() {
//        setOpaque(true);
//    }
//
//    @Override
//    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
//        if (isSelected) {
//            setForeground(table.getSelectionForeground());
//            setBackground(table.getSelectionBackground());
//        } else {
//            setForeground(table.getForeground());
//            setBackground(UIManager.getColor("Button.background"));
//        }
//        setText((value == null) ? "" : value.toString());
//        return this;
//    }
//}
//
//// Créez un éditeur de cellule personnalisé pour les boutons
//class ButtonEditor extends DefaultCellEditor {
//    protected JButton button;
//
//    public ButtonEditor(JCheckBox checkBox) {
//        super(checkBox);
//        button = new JButton();
//        button.setOpaque(true);
//        button.addActionListener(new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                // Action à effectuer lors du clic sur le bouton "Modifier"
//                // Par exemple, changer l'index du JTabbedPane
//                jTabbedPane1.setSelectedIndex(4);
//            }
//        });
//    }
//
//    public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
//        if (isSelected) {
//            button.setForeground(table.getSelectionForeground());
//            button.setBackground(table.getSelectionBackground());
//        } else {
//            button.setForeground(table.getForeground());
//            button.setBackground(table.getBackground());
//        }
//        button.setText((value == null) ? "" : value.toString());
//        return button;
//    }
//}
//DefaultTableModel tableModel = new DefaultTableModel();
//// Ajoutez les colonnes de votre table (ID, cahier, rallonge, etc.)
//tableModel.addColumn("ID");
//tableModel.addColumn("Cahier");
//tableModel.addColumn("Rallonge");
//tableModel.addColumn("Projecteur");
//tableModel.addColumn("Nom/Prenom");
//tableModel.addColumn("Classe");
//tableModel.addColumn("Date");
//// Ajoutez une colonne supplémentaire pour le bouton "Modifier"
//tableModel.addColumn("Modifier");
//
//// Parcourez les résultats de la requête et ajoutez-les au modèle de table
//while (rs_table.next()) {
//    Object[] row = {
//        rs_table.getInt("id"),
//        rs_table.getString("cahier"),
//        rs_table.getString("rallonge"),
//        rs_table.getString("projecteur"),
//        rs_table.getString("nom_prenoms"),
//        rs_table.getString("classe"),
//        rs_table.getString("date"),
//        "Modifier"
//     
//    };
//    tableModel.addRow(row);
//}
//
//// Ajoutez la colonne de bouton Modifier
//int rowCount = tableModel.getRowCount();
//for (int i = 0; i < rowCount; i++) {
//    JButton button = new JButton("Modifier");
//    button.addActionListener(new ActionListener() {
//        @Override
//        public void actionPerformed(ActionEvent e) {
//            // Action à effectuer lors du clic sur le bouton "Modifier"
//            // Par exemple, changer l'index du JTabbedPane
//            jTabbedPane1.setSelectedIndex(4);
//        }
//    });
//    // Ajoutez le bouton à la dernière colonne de chaque ligne
//    tableModel.setValueAt(button, i, 7);
//}
//
//// Associez le modèle de table à votre JTable
//table.setModel(tableModel);
//table.getColumnModel().getColumn(7).setCellRenderer(new ButtonRenderer());
//table.getColumnModel().getColumn(7).setCellEditor(new ButtonEditor(new JCheckBox()));
//    
//}catch(Exception e){
//        e.printStackTrace();
//    }
//}
//
//
//
//public class ButtonRenderer extends JButton implements TableCellRenderer {
//
//    public ButtonRenderer() {
//        // Rendre le bouton transparent
//        setOpaque(true);
//         addActionListener(new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                
//            jTabbedPane1.setSelectedIndex(4);
//            jTabbedPane1.setVisible(true);
//            }
//        });
//    }
//
//    @Override
//    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
//        // Le bouton rendu affichera le texte "Modifier"
//        setText((value == null) ? "" : value.toString());
//        return this;
//    }
//}
//

    public void UpdateTable() {
    String sql = "SELECT * FROM emprunt";
    try {
        ps_table = con.prepareStatement(sql);
        rs_table = ps_table.executeQuery();

        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("ID");
        tableModel.addColumn("Cahier");
        tableModel.addColumn("Rallonge");
        tableModel.addColumn("Projecteur");
        tableModel.addColumn("Nom/Prenom");
        tableModel.addColumn("Classe");
        tableModel.addColumn("Date");
        tableModel.addColumn("Modifier");
        tableModel.addColumn("Supprimer");
        

        while (rs_table.next()) {
            Object[] row = {
                rs_table.getInt("id"),
                rs_table.getString("cahier"),
                rs_table.getString("rallonge"),
                rs_table.getString("projecteur"),
                rs_table.getString("nom_prenoms"),
                rs_table.getString("classe"),
                rs_table.getString("date"),
                "Modifier",
                "Supprimer"
            };
            tableModel.addRow(row);
        }

        table.setModel(tableModel);
        table.getColumnModel().getColumn(7).setCellRenderer(new ButtonRenderer());
        table.getColumnModel().getColumn(7).setCellEditor(new ButtonEditor(new JCheckBox()));
         table.getColumnModel().getColumn(8).setCellRenderer(new ButtonRenderer());
        table.getColumnModel().getColumn(8).setCellEditor(new ButtonDelete(new JCheckBox()));

    } catch (Exception e) {
        e.printStackTrace();
    }
}

    private void loadComboBoxItems() {
    try {
        // Préparation des requêtes SQL pour récupérer les éléments uniques pour chaque JComboBox
        String sqlCahier = "SELECT numero FROM cahier WHERE statut_emprunt = 0";
        String sqlClasse = "SELECT nom FROM classe WHERE statut_emprunt = 0 ";
        String sqlRallonge = "SELECT numero FROM rallonge WHERE statut_emprunt = 0 ";
        String sqlProjecteur = "SELECT numero FROM projecteur WHERE statut_emprunt = 0 ";

        // Exécution des requêtes et remplissage des JComboBox
        loadItemsIntoComboBox(modifierListeCahier, sqlCahier);
        loadItemsIntoComboBox(modifierListeClasse, sqlClasse);
        loadItemsIntoComboBox(modifierListeRallonge, sqlRallonge);
        loadItemsIntoComboBox(modifierListeProjecteur, sqlProjecteur);
    } catch (SQLException e) {
        e.printStackTrace();
    }
}

private void loadItemsIntoComboBox(JComboBox comboBox, String sql) throws SQLException {
    PreparedStatement ps = con.prepareStatement(sql);
    ResultSet rs = ps.executeQuery();
    comboBox.removeAllItems();
    while (rs.next()) {
        comboBox.addItem(rs.getString(1));
    }
    rs.close();
    ps.close();
}


    class ButtonRenderer extends JButton implements TableCellRenderer {

    public ButtonRenderer() {
        setOpaque(true);
    }

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        setText((value == null) ? "" : value.toString());
        return this;
    }
}

class ButtonEditor extends DefaultCellEditor {
    protected JButton button;

    public ButtonEditor(JCheckBox checkBox) {
        super(checkBox);
        button = new JButton();
        button.setOpaque(true);
        button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                
                
                JTable table = (JTable) SwingUtilities.getAncestorOfClass(JTable.class, button);
                int modelRow = table.convertRowIndexToModel(table.getEditingRow());

                // Récupération des valeurs de l'emprunt sélectionné
                Object id=table.getModel().getValueAt(modelRow, 0);
                Object cahier = table.getModel().getValueAt(modelRow, 1);
                Object rallonge = table.getModel().getValueAt(modelRow, 2);
                Object projecteur = table.getModel().getValueAt(modelRow, 3);
                Object nomPrenoms = table.getModel().getValueAt(modelRow, 4);
                Object classe = table.getModel().getValueAt(modelRow, 5);
                Object date = table.getModel().getValueAt(modelRow, 6);

               
                jTabbedPane1.setSelectedIndex(4);
                loadComboBoxItems();
                
                modifierListeCahier.setSelectedItem(cahier.toString());
                modifierListeClasse.setSelectedItem(classe.toString());
                modifierListeRallonge.setSelectedItem(rallonge.toString());
                modifierListeProjecteur.setSelectedItem(projecteur.toString());
                modifierNomPrenoms.setText(nomPrenoms.toString());
                modifierDateLabel.setText(date.toString());
                modifierId.setText(id.toString());
                jTabbedPane1.setVisible(true);
                
               
            
            }
        });
    }

    public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
        if (isSelected) {
            button.setForeground(table.getSelectionForeground());
            button.setBackground(table.getSelectionBackground());
        } else {
            button.setForeground(table.getForeground());
            button.setBackground(table.getBackground());
        }
        button.setText((value == null) ? "" : value.toString());
        return button;
    }
}




class ButtonDelete extends DefaultCellEditor {
    protected JButton button;

    public ButtonDelete(JCheckBox checkBox) {
        super(checkBox);
        button = new JButton();
        button.setOpaque(true);
       button.addActionListener(new ActionListener() {
    @Override
    public void actionPerformed(ActionEvent e) {
        JTable table = (JTable) SwingUtilities.getAncestorOfClass(JTable.class, button);
        int modelRow = table.convertRowIndexToModel(table.getEditingRow());

        // Récupération de l'ID de l'emprunt sélectionné
        Object id = table.getModel().getValueAt(modelRow, 0);

        // Demander confirmation de la suppression
        int option = JOptionPane.showConfirmDialog(null, "Voulez-vous vraiment supprimer cet emprunt ?", "Confirmation de suppression", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            // Supprimer l'emprunt de la base de données
            deleteEmprunt(id);
            
            // Supprimer la ligne de la table
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.removeRow(modelRow);
        }
    }
});
}

    public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
        if (isSelected) {
            button.setForeground(table.getSelectionForeground());
            button.setBackground(table.getSelectionBackground());
        } else {
            button.setForeground(table.getForeground());
            button.setBackground(table.getBackground());
        }
        button.setText((value == null) ? "" : value.toString());
        return button;
    }

private void deleteEmprunt(Object id) {
    try {
        
        // Récupération des anciennes valeurs du tableau
    String ancienneClasse = table.getValueAt(table.getSelectedRow(), 5).toString();
    String ancienProjecteur = table.getValueAt(table.getSelectedRow(), 3).toString();
    String ancienneRallonge = table.getValueAt(table.getSelectedRow(), 2).toString();
     updateStatutEmprunt("classe", "nom", ancienneClasse, 0);
     updateStatutEmprunt("projecteur", "numero",ancienProjecteur, 0);
     updateStatutEmprunt("rallonge", "numero",ancienneRallonge, 0);
        // Créez votre requête SQL DELETE en utilisant l'ID de l'emprunt
        String sql = "DELETE FROM emprunt WHERE id = ?";
        
        // Préparez votre instruction SQL
        PreparedStatement pstmt = con.prepareStatement(sql);
        
        // Définissez la valeur de l'ID dans votre requête SQL
        pstmt.setObject(1, id);
        
        // Exécutez la requête
        pstmt.executeUpdate();
        
        // Fermez la déclaration préparée
        pstmt.close();
        
        // Affichez un message de succès
        JOptionPane.showMessageDialog(null, "Emprunt supprimé avec succès de la base de données.");
    } catch (SQLException e) {
        // Gérez les exceptions si la suppression échoue
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Erreur lors de la suppression de l'emprunt : " + e.getMessage());
    }
}


}



private void updateEmprunt() {
    // Récupération des anciennes valeurs du tableau
    String ancienneClasse = table.getValueAt(table.getSelectedRow(), 5).toString();
    String ancienProjecteur = table.getValueAt(table.getSelectedRow(), 3).toString();
    String ancienneRallonge = table.getValueAt(table.getSelectedRow(), 2).toString();

    // Récupération des nouvelles valeurs sélectionnées
    int id = Integer.parseInt(modifierId.getText());
    String cahier = modifierListeCahier.getSelectedItem().toString();
    String nouvelleClasse = modifierListeClasse.getSelectedItem().toString();
    String nouveauProjecteur = modifierListeProjecteur.getSelectedItem().toString();
    String nouvelleRallonge = modifierListeRallonge.getSelectedItem().toString();
    String nomPrenoms = modifierNomPrenoms.getText();
    String date = modifierDateLabel.getText(); // Assurez-vous que le format de date est correct pour votre base de données

    try{
        
         // Comparaison des valeurs pour déterminer les mises à jour du statut_emprunt
    if (!ancienneClasse.equals(nouvelleClasse)) {
        updateStatutEmprunt("classe", "nom", ancienneClasse, 0); // Mettre à 0 le statut_emprunt de l'ancienne classe
        updateStatutEmprunt("classe", "nom", nouvelleClasse, 1); // Mettre à 1 le statut_emprunt de la nouvelle classe
    }
    if (!ancienProjecteur.equals(nouveauProjecteur)) {
        updateStatutEmprunt("projecteur", "numero",ancienProjecteur, 0); // Mettre à 0 le statut_emprunt de l'ancien projecteur
        updateStatutEmprunt("projecteur", "numero",nouveauProjecteur, 1); // Mettre à 1 le statut_emprunt du nouveau projecteur
    }
    if (!ancienneRallonge.equals(nouvelleRallonge)) {
        updateStatutEmprunt("rallonge", "numero",ancienneRallonge, 0); // Mettre à 0 le statut_emprunt de l'ancienne rallonge
        updateStatutEmprunt("rallonge","numero", nouvelleRallonge, 1); // Mettre à 1 le statut_emprunt de la nouvelle rallonge
    }

        
    }
    catch(Exception e){
        System.out.println("Erreur odification statut_emprunt");
    }

   
    // Suite du code pour mettre à jour les informations d'emprunt...
    
    String sql = "UPDATE emprunt SET cahier = ?, classe = ?, rallonge = ?, projecteur = ?, nom_prenoms = ?, date = ? WHERE id = ?";

    try (PreparedStatement pstmt = con.prepareStatement(sql)) {
       pstmt.setString(1, cahier);
        pstmt.setString(2, nouvelleClasse);
       pstmt.setString(3, nouvelleRallonge);
        pstmt.setString(4, nouveauProjecteur);
        pstmt.setString(5, nomPrenoms);
        pstmt.setString(6, date);
        pstmt.setInt(7, id);

        int affectedRows = pstmt.executeUpdate();
        if (affectedRows > 0) {
            JOptionPane.showMessageDialog(null, "Mise à jour réussie");
        } else {
            JOptionPane.showMessageDialog(null, "Aucune mise à jour effectuée. Vérifiez vos données.");
       }
    } catch (SQLException e) {
       e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Erreur lors de la mise à jour: " + e.getMessage());
    }
    
}



private void updateStatutEmprunt(String table, String colonne, String valeur, int statut) {
    try {
        String sqlUpdateStatut = "UPDATE " + table + " SET statut_emprunt = ? WHERE " + colonne + " = ?";
        try (PreparedStatement pstmt = con.prepareStatement(sqlUpdateStatut)) {
            pstmt.setInt(1, statut);
            pstmt.setString(2, valeur);
            pstmt.executeUpdate();
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Erreur lors de la mise à jour du statut emprunt: " + e.getMessage());
    }
}


//private void updateStatutEmprunt() {
//    try {
//        
//        String sqlUpdateStatutClasse = "UPDATE classe SET statut_emprunt = 0 WHERE statut_emprunt = 1; " + // Mettre à jour toutes les classes à 0
//                                        "UPDATE classe SET statut_emprunt = 1 WHERE nom_classe = ?;";
//
//        String sqlUpdateStatutRallonge = "UPDATE rallonge SET statut_emprunt = 0 WHERE statut_emprunt = 1; " + // Mettre à jour toutes les rallonges à 0
//                                          "UPDATE rallonge SET statut_emprunt = 1 WHERE nom_rallonge = ?;";
//
//        String sqlUpdateStatutProjecteur = "UPDATE projecteur SET statut_emprunt = 0 WHERE statut_emprunt = 1; " + // Mettre à jour tous les projecteurs à 0
//                                            "UPDATE projecteur SET statut_emprunt = 1 WHERE nom_projecteur = ?;";
//
//        try (
//             PreparedStatement pstmtUpdateStatutClasse = con.prepareStatement(sqlUpdateStatutClasse);
//             PreparedStatement pstmtUpdateStatutRallonge = con.prepareStatement(sqlUpdateStatutRallonge);
//             PreparedStatement pstmtUpdateStatutProjecteur = con.prepareStatement(sqlUpdateStatutProjecteur)) {
//
//            pstmtUpdateStatutClasse.setString(1, modifierListeClasse.getSelectedItem().toString());
//            pstmtUpdateStatutRallonge.setString(1, modifierListeRallonge.getSelectedItem().toString());
//            pstmtUpdateStatutProjecteur.setString(1, modifierListeProjecteur.getSelectedItem().toString());
//
//            
//            pstmtUpdateStatutRallonge.executeUpdate();
//            pstmtUpdateStatutProjecteur.executeUpdate();
//            pstmtUpdateStatutClasse.executeUpdate();
//
//            JOptionPane.showMessageDialog(null, "Statut emprunt mis à jour avec succès dans toutes les tables.");
//        }
//    } catch (SQLException e) {
//        e.printStackTrace();
//        JOptionPane.showMessageDialog(null, "Erreur lors de la mise à jour du statut emprunt: " + e.getMessage());
//    }
//}
//
//
//    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Accueil().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private erp.PanelBorder accordeon;
    private erp.PanelSlide accordeonSlide;
    private javax.swing.JButton accueilAccordeon;
    private javax.swing.JButton annulerEmprunt;
    private javax.swing.JButton annulerModifierEmprunt1;
    private javax.swing.JButton dateBtn;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JButton empruntAccordeon;
    private javax.swing.JButton empruntBtn;
    private javax.swing.JButton enregistrerAccordeon;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jb_update;
    private javax.swing.JComboBox<String> listeCahier;
    private javax.swing.JComboBox<String> listeClasse;
    private javax.swing.JComboBox<String> listeProjecteur;
    private javax.swing.JComboBox<String> listeRallonge;
    private javax.swing.JButton modifierDateBtn;
    private javax.swing.JLabel modifierDateLabel;
    private javax.swing.JButton modifierEmprunt;
    private javax.swing.JLabel modifierId;
    private javax.swing.JComboBox<String> modifierListeCahier;
    private javax.swing.JComboBox<String> modifierListeClasse;
    private javax.swing.JComboBox<String> modifierListeProjecteur;
    private javax.swing.JComboBox<String> modifierListeRallonge;
    private javax.swing.JTextField modifierNomPrenoms;
    private javax.swing.JLabel namecon;
    private javax.swing.JTextField nomPrenoms;
    private erp.PanelBorder panelBorder1;
    private erp.PanelBorder panelBorder2;
    private erp.PanelBorder panelBorder4;
    private erp.PanelBorder panelBorder5;
    private erp.PanelBorder panelBorder6;
    private erp.PanelGradiente panelGradiente1;
    private erp.PanelGradiente panelGradiente2;
    private javax.swing.JButton retourAccordeon;
    private javax.swing.JTable table;
    private javax.swing.JTable tableModel;
    private javax.swing.JComboBox<String> txtCahier2;
    // End of variables declaration//GEN-END:variables
}
